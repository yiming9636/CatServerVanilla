--- ../src-base/minecraft/net/minecraft/network/rcon/RConThreadQuery.java
+++ ../src-work/minecraft/net/minecraft/network/rcon/RConThreadQuery.java
@@ -35,7 +35,7 @@
     private final Map<SocketAddress, String> idents;
     private String queryHostname;
     private String serverHostname;
-    private final Map<SocketAddress, RConThreadQuery.Auth> queryClients;
+    private final Map<SocketAddress, Auth> queryClients;
     private final long time;
     private final RConOutputStream output;
     private long lastQueryResponseTime;
@@ -82,7 +82,7 @@
 
         this.idents = Maps.<SocketAddress, String>newHashMap();
         this.output = new RConOutputStream(1460);
-        this.queryClients = Maps.<SocketAddress, RConThreadQuery.Auth>newHashMap();
+        this.queryClients = Maps.<SocketAddress, Auth>newHashMap();
         this.time = (new Date()).getTime();
     }
 
@@ -208,7 +208,7 @@
 
     private byte[] getRequestID(SocketAddress address)
     {
-        return ((RConThreadQuery.Auth)this.queryClients.get(address)).getRequestId();
+        return ((Auth)this.queryClients.get(address)).getRequestId();
     }
 
     private Boolean verifyClientAuth(DatagramPacket requestPacket)
@@ -222,13 +222,13 @@
         else
         {
             byte[] abyte = requestPacket.getData();
-            return ((RConThreadQuery.Auth)this.queryClients.get(socketaddress)).getRandomChallenge() != RConUtils.getBytesAsBEint(abyte, 7, requestPacket.getLength()) ? false : true;
+            return ((Auth)this.queryClients.get(socketaddress)).getRandomChallenge() != RConUtils.getBytesAsBEint(abyte, 7, requestPacket.getLength()) ? false : true;
         }
     }
 
     private void sendAuthChallenge(DatagramPacket requestPacket) throws IOException
     {
-        RConThreadQuery.Auth rconthreadquery$auth = new RConThreadQuery.Auth(requestPacket);
+        Auth rconthreadquery$auth = new Auth(requestPacket);
         this.queryClients.put(requestPacket.getSocketAddress(), rconthreadquery$auth);
         this.sendResponsePacket(rconthreadquery$auth.getChallengeValue(), requestPacket);
     }
@@ -242,13 +242,13 @@
             if (i >= this.lastAuthCheckTime + 30000L)
             {
                 this.lastAuthCheckTime = i;
-                Iterator<Entry<SocketAddress, RConThreadQuery.Auth>> iterator = this.queryClients.entrySet().iterator();
+                Iterator<Entry<SocketAddress, Auth>> iterator = this.queryClients.entrySet().iterator();
 
                 while (iterator.hasNext())
                 {
-                    Entry<SocketAddress, RConThreadQuery.Auth> entry = (Entry)iterator.next();
+                    Entry<SocketAddress, Auth> entry = (Entry)iterator.next();
 
-                    if (((RConThreadQuery.Auth)entry.getValue()).hasExpired(i).booleanValue())
+                    if (((Auth)entry.getValue()).hasExpired(i).booleanValue())
                     {
                         iterator.remove();
                     }
