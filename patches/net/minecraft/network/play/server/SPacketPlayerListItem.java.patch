--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketPlayerListItem.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketPlayerListItem.java
@@ -18,36 +18,36 @@
 
 public class SPacketPlayerListItem implements Packet<INetHandlerPlayClient>
 {
-    private SPacketPlayerListItem.Action action;
-    private final List<SPacketPlayerListItem.AddPlayerData> players = Lists.<SPacketPlayerListItem.AddPlayerData>newArrayList();
+    private Action action;
+    private final List<AddPlayerData> players = Lists.<AddPlayerData>newArrayList();
 
     public SPacketPlayerListItem()
     {
     }
 
-    public SPacketPlayerListItem(SPacketPlayerListItem.Action actionIn, EntityPlayerMP... playersIn)
+    public SPacketPlayerListItem(Action actionIn, EntityPlayerMP... playersIn)
     {
         this.action = actionIn;
 
         for (EntityPlayerMP entityplayermp : playersIn)
         {
-            this.players.add(new SPacketPlayerListItem.AddPlayerData(entityplayermp.getGameProfile(), entityplayermp.ping, entityplayermp.interactionManager.getGameType(), entityplayermp.getTabListDisplayName()));
+            this.players.add(new AddPlayerData(entityplayermp.getGameProfile(), entityplayermp.ping, entityplayermp.interactionManager.getGameType(), entityplayermp.getTabListDisplayName()));
         }
     }
 
-    public SPacketPlayerListItem(SPacketPlayerListItem.Action actionIn, Iterable<EntityPlayerMP> playersIn)
+    public SPacketPlayerListItem(Action actionIn, Iterable<EntityPlayerMP> playersIn)
     {
         this.action = actionIn;
 
         for (EntityPlayerMP entityplayermp : playersIn)
         {
-            this.players.add(new SPacketPlayerListItem.AddPlayerData(entityplayermp.getGameProfile(), entityplayermp.ping, entityplayermp.interactionManager.getGameType(), entityplayermp.getTabListDisplayName()));
+            this.players.add(new AddPlayerData(entityplayermp.getGameProfile(), entityplayermp.ping, entityplayermp.interactionManager.getGameType(), entityplayermp.getTabListDisplayName()));
         }
     }
 
     public void readPacketData(PacketBuffer buf) throws IOException
     {
-        this.action = (SPacketPlayerListItem.Action)buf.readEnumValue(SPacketPlayerListItem.Action.class);
+        this.action = (Action)buf.readEnumValue(Action.class);
         int i = buf.readVarInt();
 
         for (int j = 0; j < i; ++j)
@@ -109,7 +109,7 @@
                     gameprofile = new GameProfile(buf.readUniqueId(), (String)null);
             }
 
-            this.players.add(new SPacketPlayerListItem.AddPlayerData(gameprofile, k, gametype, itextcomponent));
+            this.players.add(new AddPlayerData(gameprofile, k, gametype, itextcomponent));
         }
     }
 
@@ -118,7 +118,7 @@
         buf.writeEnumValue(this.action);
         buf.writeVarInt(this.players.size());
 
-        for (SPacketPlayerListItem.AddPlayerData spacketplayerlistitem$addplayerdata : this.players)
+        for (AddPlayerData spacketplayerlistitem$addplayerdata : this.players)
         {
             switch (this.action)
             {
@@ -191,7 +191,7 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public List<SPacketPlayerListItem.AddPlayerData> getEntries()
+    public List<AddPlayerData> getEntries()
     {
         return this.players;
     }
