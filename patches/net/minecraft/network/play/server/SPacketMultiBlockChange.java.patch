--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketMultiBlockChange.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketMultiBlockChange.java
@@ -15,7 +15,7 @@
 public class SPacketMultiBlockChange implements Packet<INetHandlerPlayClient>
 {
     private ChunkPos chunkPos;
-    private SPacketMultiBlockChange.BlockUpdateData[] changedBlocks;
+    private BlockUpdateData[] changedBlocks;
 
     public SPacketMultiBlockChange()
     {
@@ -24,22 +24,22 @@
     public SPacketMultiBlockChange(int p_i46959_1_, short[] p_i46959_2_, Chunk p_i46959_3_)
     {
         this.chunkPos = new ChunkPos(p_i46959_3_.x, p_i46959_3_.z);
-        this.changedBlocks = new SPacketMultiBlockChange.BlockUpdateData[p_i46959_1_];
+        this.changedBlocks = new BlockUpdateData[p_i46959_1_];
 
         for (int i = 0; i < this.changedBlocks.length; ++i)
         {
-            this.changedBlocks[i] = new SPacketMultiBlockChange.BlockUpdateData(p_i46959_2_[i], p_i46959_3_);
+            this.changedBlocks[i] = new BlockUpdateData(p_i46959_2_[i], p_i46959_3_);
         }
     }
 
     public void readPacketData(PacketBuffer buf) throws IOException
     {
         this.chunkPos = new ChunkPos(buf.readInt(), buf.readInt());
-        this.changedBlocks = new SPacketMultiBlockChange.BlockUpdateData[buf.readVarInt()];
+        this.changedBlocks = new BlockUpdateData[buf.readVarInt()];
 
         for (int i = 0; i < this.changedBlocks.length; ++i)
         {
-            this.changedBlocks[i] = new SPacketMultiBlockChange.BlockUpdateData(buf.readShort(), Block.BLOCK_STATE_IDS.getByValue(buf.readVarInt()));
+            this.changedBlocks[i] = new BlockUpdateData(buf.readShort(), Block.BLOCK_STATE_IDS.getByValue(buf.readVarInt()));
         }
     }
 
@@ -49,7 +49,7 @@
         buf.writeInt(this.chunkPos.z);
         buf.writeVarInt(this.changedBlocks.length);
 
-        for (SPacketMultiBlockChange.BlockUpdateData spacketmultiblockchange$blockupdatedata : this.changedBlocks)
+        for (BlockUpdateData spacketmultiblockchange$blockupdatedata : this.changedBlocks)
         {
             buf.writeShort(spacketmultiblockchange$blockupdatedata.getOffset());
             buf.writeVarInt(Block.BLOCK_STATE_IDS.get(spacketmultiblockchange$blockupdatedata.getBlockState()));
@@ -62,7 +62,7 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public SPacketMultiBlockChange.BlockUpdateData[] getChangedBlocks()
+    public BlockUpdateData[] getChangedBlocks()
     {
         return this.changedBlocks;
     }
