--- ../src-base/minecraft/net/minecraft/client/gui/inventory/GuiBeacon.java
+++ ../src-work/minecraft/net/minecraft/client/gui/inventory/GuiBeacon.java
@@ -31,7 +31,7 @@
     private static final Logger LOGGER = LogManager.getLogger();
     private static final ResourceLocation BEACON_GUI_TEXTURES = new ResourceLocation("textures/gui/container/beacon.png");
     private final IInventory tileBeacon;
-    private GuiBeacon.ConfirmButton beaconConfirmButton;
+    private ConfirmButton beaconConfirmButton;
     private boolean buttonsNotDrawn;
 
     public GuiBeacon(InventoryPlayer playerInventory, IInventory tileBeaconIn)
@@ -45,9 +45,9 @@
     public void initGui()
     {
         super.initGui();
-        this.beaconConfirmButton = new GuiBeacon.ConfirmButton(-1, this.guiLeft + 164, this.guiTop + 107);
+        this.beaconConfirmButton = new ConfirmButton(-1, this.guiLeft + 164, this.guiTop + 107);
         this.buttonList.add(this.beaconConfirmButton);
-        this.buttonList.add(new GuiBeacon.CancelButton(-2, this.guiLeft + 190, this.guiTop + 107));
+        this.buttonList.add(new CancelButton(-2, this.guiLeft + 190, this.guiTop + 107));
         this.buttonsNotDrawn = true;
         this.beaconConfirmButton.enabled = false;
     }
@@ -72,7 +72,7 @@
                 for (int j1 = 0; j1 < l; ++j1)
                 {
                     Potion potion2 = TileEntityBeacon.EFFECTS_LIST[k][j1];
-                    GuiBeacon.PowerButton guibeacon$powerbutton = new GuiBeacon.PowerButton(j++, this.guiLeft + 76 + j1 * 24 - i1 / 2, this.guiTop + 22 + k * 25, potion2, k);
+                    PowerButton guibeacon$powerbutton = new PowerButton(j++, this.guiLeft + 76 + j1 * 24 - i1 / 2, this.guiTop + 22 + k * 25, potion2, k);
                     this.buttonList.add(guibeacon$powerbutton);
 
                     if (k >= i)
@@ -93,7 +93,7 @@
             for (int j2 = 0; j2 < l1 - 1; ++j2)
             {
                 Potion potion3 = TileEntityBeacon.EFFECTS_LIST[3][j2];
-                GuiBeacon.PowerButton guibeacon$powerbutton2 = new GuiBeacon.PowerButton(j++, this.guiLeft + 167 + j2 * 24 - i2 / 2, this.guiTop + 47, potion3, 3);
+                PowerButton guibeacon$powerbutton2 = new PowerButton(j++, this.guiLeft + 167 + j2 * 24 - i2 / 2, this.guiTop + 47, potion3, 3);
                 this.buttonList.add(guibeacon$powerbutton2);
 
                 if (3 >= i)
@@ -108,7 +108,7 @@
 
             if (potion != null)
             {
-                GuiBeacon.PowerButton guibeacon$powerbutton1 = new GuiBeacon.PowerButton(j++, this.guiLeft + 167 + (l1 - 1) * 24 - i2 / 2, this.guiTop + 47, potion, 3);
+                PowerButton guibeacon$powerbutton1 = new PowerButton(j++, this.guiLeft + 167 + (l1 - 1) * 24 - i2 / 2, this.guiTop + 47, potion, 3);
                 this.buttonList.add(guibeacon$powerbutton1);
 
                 if (3 >= i)
@@ -142,9 +142,9 @@
             this.mc.player.connection.sendPacket(new CPacketCloseWindow(this.mc.player.openContainer.windowId));
             this.mc.displayGuiScreen((GuiScreen)null);
         }
-        else if (button instanceof GuiBeacon.PowerButton)
+        else if (button instanceof PowerButton)
         {
-            GuiBeacon.PowerButton guibeacon$powerbutton = (GuiBeacon.PowerButton)button;
+            PowerButton guibeacon$powerbutton = (PowerButton)button;
 
             if (guibeacon$powerbutton.isSelected())
             {
@@ -270,7 +270,7 @@
         }
 
     @SideOnly(Side.CLIENT)
-    class CancelButton extends GuiBeacon.Button
+    class CancelButton extends Button
     {
         public CancelButton(int buttonId, int x, int y)
         {
@@ -284,7 +284,7 @@
     }
 
     @SideOnly(Side.CLIENT)
-    class ConfirmButton extends GuiBeacon.Button
+    class ConfirmButton extends Button
     {
         public ConfirmButton(int buttonId, int x, int y)
         {
@@ -298,7 +298,7 @@
     }
 
     @SideOnly(Side.CLIENT)
-    class PowerButton extends GuiBeacon.Button
+    class PowerButton extends Button
     {
         private final Potion effect;
         private final int tier;
