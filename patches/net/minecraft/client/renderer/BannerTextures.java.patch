--- ../src-base/minecraft/net/minecraft/client/renderer/BannerTextures.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/BannerTextures.java
@@ -17,15 +17,15 @@
 @SideOnly(Side.CLIENT)
 public class BannerTextures
 {
-    public static final BannerTextures.Cache BANNER_DESIGNS = new BannerTextures.Cache("B", new ResourceLocation("textures/entity/banner_base.png"), "textures/entity/banner/");
-    public static final BannerTextures.Cache SHIELD_DESIGNS = new BannerTextures.Cache("S", new ResourceLocation("textures/entity/shield_base.png"), "textures/entity/shield/");
+    public static final Cache BANNER_DESIGNS = new Cache("B", new ResourceLocation("textures/entity/banner_base.png"), "textures/entity/banner/");
+    public static final Cache SHIELD_DESIGNS = new Cache("S", new ResourceLocation("textures/entity/shield_base.png"), "textures/entity/shield/");
     public static final ResourceLocation SHIELD_BASE_TEXTURE = new ResourceLocation("textures/entity/shield_base_nopattern.png");
     public static final ResourceLocation BANNER_BASE_TEXTURE = new ResourceLocation("textures/entity/banner/base.png");
 
     @SideOnly(Side.CLIENT)
     public static class Cache
         {
-            private final Map<String, BannerTextures.CacheEntry> cacheMap = Maps.<String, BannerTextures.CacheEntry>newLinkedHashMap();
+            private final Map<String, CacheEntry> cacheMap = Maps.<String, CacheEntry>newLinkedHashMap();
             private final ResourceLocation cacheResourceLocation;
             private final String cacheResourceBase;
             private final String cacheId;
@@ -47,7 +47,7 @@
                 else
                 {
                     id = this.cacheId + id;
-                    BannerTextures.CacheEntry bannertextures$cacheentry = this.cacheMap.get(id);
+                    CacheEntry bannertextures$cacheentry = this.cacheMap.get(id);
 
                     if (bannertextures$cacheentry == null)
                     {
@@ -63,7 +63,7 @@
                             list.add(this.cacheResourceBase + bannerpattern.getFileName() + ".png");
                         }
 
-                        bannertextures$cacheentry = new BannerTextures.CacheEntry();
+                        bannertextures$cacheentry = new CacheEntry();
                         bannertextures$cacheentry.textureLocation = new ResourceLocation(id);
                         Minecraft.getMinecraft().getTextureManager().loadTexture(bannertextures$cacheentry.textureLocation, new LayeredColorMaskTexture(this.cacheResourceLocation, list, colorList));
                         this.cacheMap.put(id, bannertextures$cacheentry);
@@ -82,7 +82,7 @@
                 while (iterator.hasNext())
                 {
                     String s = iterator.next();
-                    BannerTextures.CacheEntry bannertextures$cacheentry = this.cacheMap.get(s);
+                    CacheEntry bannertextures$cacheentry = this.cacheMap.get(s);
 
                     if (i - bannertextures$cacheentry.lastUseMillis > 5000L)
                     {
