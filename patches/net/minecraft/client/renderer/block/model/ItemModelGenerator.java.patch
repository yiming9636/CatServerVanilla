--- ../src-base/minecraft/net/minecraft/client/renderer/block/model/ItemModelGenerator.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/block/model/ItemModelGenerator.java
@@ -67,7 +67,7 @@
         float f1 = (float)p_178397_1_.getIconHeight();
         List<BlockPart> list = Lists.<BlockPart>newArrayList();
 
-        for (ItemModelGenerator.Span itemmodelgenerator$span : this.getSpans(p_178397_1_))
+        for (Span itemmodelgenerator$span : this.getSpans(p_178397_1_))
         {
             float f2 = 0.0F;
             float f3 = 0.0F;
@@ -82,7 +82,7 @@
             float f12 = (float)itemmodelgenerator$span.getMin();
             float f13 = (float)itemmodelgenerator$span.getMax();
             float f14 = (float)itemmodelgenerator$span.getAnchor();
-            ItemModelGenerator.SpanFacing itemmodelgenerator$spanfacing = itemmodelgenerator$span.getFacing();
+            SpanFacing itemmodelgenerator$spanfacing = itemmodelgenerator$span.getFacing();
 
             switch (itemmodelgenerator$spanfacing)
             {
@@ -165,11 +165,11 @@
         return list;
     }
 
-    private List<ItemModelGenerator.Span> getSpans(TextureAtlasSprite p_178393_1_)
+    private List<Span> getSpans(TextureAtlasSprite p_178393_1_)
     {
         int i = p_178393_1_.getIconWidth();
         int j = p_178393_1_.getIconHeight();
-        List<ItemModelGenerator.Span> list = Lists.<ItemModelGenerator.Span>newArrayList();
+        List<Span> list = Lists.<Span>newArrayList();
 
         for (int k = 0; k < p_178393_1_.getFrameCount(); ++k)
         {
@@ -180,10 +180,10 @@
                 for (int i1 = 0; i1 < i; ++i1)
                 {
                     boolean flag = !this.isTransparent(aint, i1, l, i, j);
-                    this.checkTransition(ItemModelGenerator.SpanFacing.UP, list, aint, i1, l, i, j, flag);
-                    this.checkTransition(ItemModelGenerator.SpanFacing.DOWN, list, aint, i1, l, i, j, flag);
-                    this.checkTransition(ItemModelGenerator.SpanFacing.LEFT, list, aint, i1, l, i, j, flag);
-                    this.checkTransition(ItemModelGenerator.SpanFacing.RIGHT, list, aint, i1, l, i, j, flag);
+                    this.checkTransition(SpanFacing.UP, list, aint, i1, l, i, j, flag);
+                    this.checkTransition(SpanFacing.DOWN, list, aint, i1, l, i, j, flag);
+                    this.checkTransition(SpanFacing.LEFT, list, aint, i1, l, i, j, flag);
+                    this.checkTransition(SpanFacing.RIGHT, list, aint, i1, l, i, j, flag);
                 }
             }
         }
@@ -191,7 +191,7 @@
         return list;
     }
 
-    private void checkTransition(ItemModelGenerator.SpanFacing p_178396_1_, List<ItemModelGenerator.Span> p_178396_2_, int[] p_178396_3_, int p_178396_4_, int p_178396_5_, int p_178396_6_, int p_178396_7_, boolean p_178396_8_)
+    private void checkTransition(SpanFacing p_178396_1_, List<Span> p_178396_2_, int[] p_178396_3_, int p_178396_4_, int p_178396_5_, int p_178396_6_, int p_178396_7_, boolean p_178396_8_)
     {
         boolean flag = this.isTransparent(p_178396_3_, p_178396_4_ + p_178396_1_.getXOffset(), p_178396_5_ + p_178396_1_.getYOffset(), p_178396_6_, p_178396_7_) && p_178396_8_;
 
@@ -201,11 +201,11 @@
         }
     }
 
-    private void createOrExpandSpan(List<ItemModelGenerator.Span> p_178395_1_, ItemModelGenerator.SpanFacing p_178395_2_, int p_178395_3_, int p_178395_4_)
+    private void createOrExpandSpan(List<Span> p_178395_1_, SpanFacing p_178395_2_, int p_178395_3_, int p_178395_4_)
     {
-        ItemModelGenerator.Span itemmodelgenerator$span = null;
+        Span itemmodelgenerator$span = null;
 
-        for (ItemModelGenerator.Span itemmodelgenerator$span1 : p_178395_1_)
+        for (Span itemmodelgenerator$span1 : p_178395_1_)
         {
             if (itemmodelgenerator$span1.getFacing() == p_178395_2_)
             {
@@ -224,7 +224,7 @@
 
         if (itemmodelgenerator$span == null)
         {
-            p_178395_1_.add(new ItemModelGenerator.Span(p_178395_2_, k, j));
+            p_178395_1_.add(new Span(p_178395_2_, k, j));
         }
         else
         {
@@ -247,12 +247,12 @@
     @SideOnly(Side.CLIENT)
     static class Span
         {
-            private final ItemModelGenerator.SpanFacing spanFacing;
+            private final SpanFacing spanFacing;
             private int min;
             private int max;
             private final int anchor;
 
-            public Span(ItemModelGenerator.SpanFacing spanFacingIn, int p_i46216_2_, int p_i46216_3_)
+            public Span(SpanFacing spanFacingIn, int p_i46216_2_, int p_i46216_3_)
             {
                 this.spanFacing = spanFacingIn;
                 this.min = p_i46216_2_;
@@ -272,7 +272,7 @@
                 }
             }
 
-            public ItemModelGenerator.SpanFacing getFacing()
+            public SpanFacing getFacing()
             {
                 return this.spanFacing;
             }
