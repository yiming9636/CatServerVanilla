--- ../src-base/minecraft/net/minecraft/advancements/critereon/KilledTrigger.java
+++ ../src-work/minecraft/net/minecraft/advancements/critereon/KilledTrigger.java
@@ -17,7 +17,7 @@
 
 public class KilledTrigger implements ICriterionTrigger<KilledTrigger.Instance>
 {
-    private final Map<PlayerAdvancements, KilledTrigger.Listeners> listeners = Maps.<PlayerAdvancements, KilledTrigger.Listeners>newHashMap();
+    private final Map<PlayerAdvancements, Listeners> listeners = Maps.<PlayerAdvancements, Listeners>newHashMap();
     private final ResourceLocation id;
 
     public KilledTrigger(ResourceLocation id)
@@ -30,22 +30,22 @@
         return this.id;
     }
 
-    public void addListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<KilledTrigger.Instance> listener)
+    public void addListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<Instance> listener)
     {
-        KilledTrigger.Listeners killedtrigger$listeners = this.listeners.get(playerAdvancementsIn);
+        Listeners killedtrigger$listeners = this.listeners.get(playerAdvancementsIn);
 
         if (killedtrigger$listeners == null)
         {
-            killedtrigger$listeners = new KilledTrigger.Listeners(playerAdvancementsIn);
+            killedtrigger$listeners = new Listeners(playerAdvancementsIn);
             this.listeners.put(playerAdvancementsIn, killedtrigger$listeners);
         }
 
         killedtrigger$listeners.add(listener);
     }
 
-    public void removeListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<KilledTrigger.Instance> listener)
+    public void removeListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<Instance> listener)
     {
-        KilledTrigger.Listeners killedtrigger$listeners = this.listeners.get(playerAdvancementsIn);
+        Listeners killedtrigger$listeners = this.listeners.get(playerAdvancementsIn);
 
         if (killedtrigger$listeners != null)
         {
@@ -63,14 +63,14 @@
         this.listeners.remove(playerAdvancementsIn);
     }
 
-    public KilledTrigger.Instance deserializeInstance(JsonObject json, JsonDeserializationContext context)
+    public Instance deserializeInstance(JsonObject json, JsonDeserializationContext context)
     {
-        return new KilledTrigger.Instance(this.id, EntityPredicate.deserialize(json.get("entity")), DamageSourcePredicate.deserialize(json.get("killing_blow")));
+        return new Instance(this.id, EntityPredicate.deserialize(json.get("entity")), DamageSourcePredicate.deserialize(json.get("killing_blow")));
     }
 
     public void trigger(EntityPlayerMP player, Entity entity, DamageSource source)
     {
-        KilledTrigger.Listeners killedtrigger$listeners = this.listeners.get(player.getAdvancements());
+        Listeners killedtrigger$listeners = this.listeners.get(player.getAdvancements());
 
         if (killedtrigger$listeners != null)
         {
@@ -99,7 +99,7 @@
     static class Listeners
         {
             private final PlayerAdvancements playerAdvancements;
-            private final Set<ICriterionTrigger.Listener<KilledTrigger.Instance>> listeners = Sets.<ICriterionTrigger.Listener<KilledTrigger.Instance>>newHashSet();
+            private final Set<ICriterionTrigger.Listener<Instance>> listeners = Sets.<ICriterionTrigger.Listener<Instance>>newHashSet();
 
             public Listeners(PlayerAdvancements playerAdvancementsIn)
             {
@@ -111,27 +111,27 @@
                 return this.listeners.isEmpty();
             }
 
-            public void add(ICriterionTrigger.Listener<KilledTrigger.Instance> listener)
+            public void add(ICriterionTrigger.Listener<Instance> listener)
             {
                 this.listeners.add(listener);
             }
 
-            public void remove(ICriterionTrigger.Listener<KilledTrigger.Instance> listener)
+            public void remove(ICriterionTrigger.Listener<Instance> listener)
             {
                 this.listeners.remove(listener);
             }
 
             public void trigger(EntityPlayerMP player, Entity entity, DamageSource source)
             {
-                List<ICriterionTrigger.Listener<KilledTrigger.Instance>> list = null;
+                List<ICriterionTrigger.Listener<Instance>> list = null;
 
-                for (ICriterionTrigger.Listener<KilledTrigger.Instance> listener : this.listeners)
+                for (ICriterionTrigger.Listener<Instance> listener : this.listeners)
                 {
-                    if (((KilledTrigger.Instance)listener.getCriterionInstance()).test(player, entity, source))
+                    if (((Instance)listener.getCriterionInstance()).test(player, entity, source))
                     {
                         if (list == null)
                         {
-                            list = Lists.<ICriterionTrigger.Listener<KilledTrigger.Instance>>newArrayList();
+                            list = Lists.<ICriterionTrigger.Listener<Instance>>newArrayList();
                         }
 
                         list.add(listener);
@@ -140,7 +140,7 @@
 
                 if (list != null)
                 {
-                    for (ICriterionTrigger.Listener<KilledTrigger.Instance> listener1 : list)
+                    for (ICriterionTrigger.Listener<Instance> listener1 : list)
                     {
                         listener1.grantCriterion(this.playerAdvancements);
                     }
