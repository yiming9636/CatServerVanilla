--- ../src-base/minecraft/net/minecraft/advancements/critereon/SummonedEntityTrigger.java
+++ ../src-work/minecraft/net/minecraft/advancements/critereon/SummonedEntityTrigger.java
@@ -17,29 +17,29 @@
 public class SummonedEntityTrigger implements ICriterionTrigger<SummonedEntityTrigger.Instance>
 {
     private static final ResourceLocation ID = new ResourceLocation("summoned_entity");
-    private final Map<PlayerAdvancements, SummonedEntityTrigger.Listeners> listeners = Maps.<PlayerAdvancements, SummonedEntityTrigger.Listeners>newHashMap();
+    private final Map<PlayerAdvancements, Listeners> listeners = Maps.<PlayerAdvancements, Listeners>newHashMap();
 
     public ResourceLocation getId()
     {
         return ID;
     }
 
-    public void addListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<SummonedEntityTrigger.Instance> listener)
+    public void addListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<Instance> listener)
     {
-        SummonedEntityTrigger.Listeners summonedentitytrigger$listeners = this.listeners.get(playerAdvancementsIn);
+        Listeners summonedentitytrigger$listeners = this.listeners.get(playerAdvancementsIn);
 
         if (summonedentitytrigger$listeners == null)
         {
-            summonedentitytrigger$listeners = new SummonedEntityTrigger.Listeners(playerAdvancementsIn);
+            summonedentitytrigger$listeners = new Listeners(playerAdvancementsIn);
             this.listeners.put(playerAdvancementsIn, summonedentitytrigger$listeners);
         }
 
         summonedentitytrigger$listeners.add(listener);
     }
 
-    public void removeListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<SummonedEntityTrigger.Instance> listener)
+    public void removeListener(PlayerAdvancements playerAdvancementsIn, ICriterionTrigger.Listener<Instance> listener)
     {
-        SummonedEntityTrigger.Listeners summonedentitytrigger$listeners = this.listeners.get(playerAdvancementsIn);
+        Listeners summonedentitytrigger$listeners = this.listeners.get(playerAdvancementsIn);
 
         if (summonedentitytrigger$listeners != null)
         {
@@ -57,15 +57,15 @@
         this.listeners.remove(playerAdvancementsIn);
     }
 
-    public SummonedEntityTrigger.Instance deserializeInstance(JsonObject json, JsonDeserializationContext context)
+    public Instance deserializeInstance(JsonObject json, JsonDeserializationContext context)
     {
         EntityPredicate entitypredicate = EntityPredicate.deserialize(json.get("entity"));
-        return new SummonedEntityTrigger.Instance(entitypredicate);
+        return new Instance(entitypredicate);
     }
 
     public void trigger(EntityPlayerMP player, Entity entity)
     {
-        SummonedEntityTrigger.Listeners summonedentitytrigger$listeners = this.listeners.get(player.getAdvancements());
+        Listeners summonedentitytrigger$listeners = this.listeners.get(player.getAdvancements());
 
         if (summonedentitytrigger$listeners != null)
         {
@@ -92,7 +92,7 @@
     static class Listeners
         {
             private final PlayerAdvancements playerAdvancements;
-            private final Set<ICriterionTrigger.Listener<SummonedEntityTrigger.Instance>> listeners = Sets.<ICriterionTrigger.Listener<SummonedEntityTrigger.Instance>>newHashSet();
+            private final Set<ICriterionTrigger.Listener<Instance>> listeners = Sets.<ICriterionTrigger.Listener<Instance>>newHashSet();
 
             public Listeners(PlayerAdvancements playerAdvancementsIn)
             {
@@ -104,27 +104,27 @@
                 return this.listeners.isEmpty();
             }
 
-            public void add(ICriterionTrigger.Listener<SummonedEntityTrigger.Instance> listener)
+            public void add(ICriterionTrigger.Listener<Instance> listener)
             {
                 this.listeners.add(listener);
             }
 
-            public void remove(ICriterionTrigger.Listener<SummonedEntityTrigger.Instance> listener)
+            public void remove(ICriterionTrigger.Listener<Instance> listener)
             {
                 this.listeners.remove(listener);
             }
 
             public void trigger(EntityPlayerMP player, Entity entity)
             {
-                List<ICriterionTrigger.Listener<SummonedEntityTrigger.Instance>> list = null;
+                List<ICriterionTrigger.Listener<Instance>> list = null;
 
-                for (ICriterionTrigger.Listener<SummonedEntityTrigger.Instance> listener : this.listeners)
+                for (ICriterionTrigger.Listener<Instance> listener : this.listeners)
                 {
-                    if (((SummonedEntityTrigger.Instance)listener.getCriterionInstance()).test(player, entity))
+                    if (((Instance)listener.getCriterionInstance()).test(player, entity))
                     {
                         if (list == null)
                         {
-                            list = Lists.<ICriterionTrigger.Listener<SummonedEntityTrigger.Instance>>newArrayList();
+                            list = Lists.<ICriterionTrigger.Listener<Instance>>newArrayList();
                         }
 
                         list.add(listener);
@@ -133,7 +133,7 @@
 
                 if (list != null)
                 {
-                    for (ICriterionTrigger.Listener<SummonedEntityTrigger.Instance> listener1 : list)
+                    for (ICriterionTrigger.Listener<Instance> listener1 : list)
                     {
                         listener1.grantCriterion(this.playerAdvancements);
                     }
