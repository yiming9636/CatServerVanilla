--- ../src-base/minecraft/net/minecraft/world/GameRules.java
+++ ../src-work/minecraft/net/minecraft/world/GameRules.java
@@ -6,44 +6,44 @@
 
 public class GameRules
 {
-    private final TreeMap<String, GameRules.Value> rules = new TreeMap<String, GameRules.Value>();
+    private final TreeMap<String, Value> rules = new TreeMap<String, Value>();
 
     public GameRules()
     {
-        this.addGameRule("doFireTick", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("mobGriefing", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("keepInventory", "false", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("doMobSpawning", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("doMobLoot", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("doTileDrops", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("doEntityDrops", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("commandBlockOutput", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("naturalRegeneration", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("doDaylightCycle", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("logAdminCommands", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("showDeathMessages", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("randomTickSpeed", "3", GameRules.ValueType.NUMERICAL_VALUE);
-        this.addGameRule("sendCommandFeedback", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("reducedDebugInfo", "false", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("spectatorsGenerateChunks", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("spawnRadius", "10", GameRules.ValueType.NUMERICAL_VALUE);
-        this.addGameRule("disableElytraMovementCheck", "false", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("maxEntityCramming", "24", GameRules.ValueType.NUMERICAL_VALUE);
-        this.addGameRule("doWeatherCycle", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("doLimitedCrafting", "false", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("maxCommandChainLength", "65536", GameRules.ValueType.NUMERICAL_VALUE);
-        this.addGameRule("announceAdvancements", "true", GameRules.ValueType.BOOLEAN_VALUE);
-        this.addGameRule("gameLoopFunction", "-", GameRules.ValueType.FUNCTION);
+        this.addGameRule("doFireTick", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("mobGriefing", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("keepInventory", "false", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("doMobSpawning", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("doMobLoot", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("doTileDrops", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("doEntityDrops", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("commandBlockOutput", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("naturalRegeneration", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("doDaylightCycle", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("logAdminCommands", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("showDeathMessages", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("randomTickSpeed", "3", ValueType.NUMERICAL_VALUE);
+        this.addGameRule("sendCommandFeedback", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("reducedDebugInfo", "false", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("spectatorsGenerateChunks", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("spawnRadius", "10", ValueType.NUMERICAL_VALUE);
+        this.addGameRule("disableElytraMovementCheck", "false", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("maxEntityCramming", "24", ValueType.NUMERICAL_VALUE);
+        this.addGameRule("doWeatherCycle", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("doLimitedCrafting", "false", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("maxCommandChainLength", "65536", ValueType.NUMERICAL_VALUE);
+        this.addGameRule("announceAdvancements", "true", ValueType.BOOLEAN_VALUE);
+        this.addGameRule("gameLoopFunction", "-", ValueType.FUNCTION);
     }
 
-    public void addGameRule(String key, String value, GameRules.ValueType type)
+    public void addGameRule(String key, String value, ValueType type)
     {
-        this.rules.put(key, new GameRules.Value(value, type));
+        this.rules.put(key, new Value(value, type));
     }
 
     public void setOrCreateGameRule(String key, String ruleValue)
     {
-        GameRules.Value gamerules$value = this.rules.get(key);
+        Value gamerules$value = this.rules.get(key);
 
         if (gamerules$value != null)
         {
@@ -51,25 +51,25 @@
         }
         else
         {
-            this.addGameRule(key, ruleValue, GameRules.ValueType.ANY_VALUE);
+            this.addGameRule(key, ruleValue, ValueType.ANY_VALUE);
         }
     }
 
     public String getString(String name)
     {
-        GameRules.Value gamerules$value = this.rules.get(name);
+        Value gamerules$value = this.rules.get(name);
         return gamerules$value != null ? gamerules$value.getString() : "";
     }
 
     public boolean getBoolean(String name)
     {
-        GameRules.Value gamerules$value = this.rules.get(name);
+        Value gamerules$value = this.rules.get(name);
         return gamerules$value != null ? gamerules$value.getBoolean() : false;
     }
 
     public int getInt(String name)
     {
-        GameRules.Value gamerules$value = this.rules.get(name);
+        Value gamerules$value = this.rules.get(name);
         return gamerules$value != null ? gamerules$value.getInt() : 0;
     }
 
@@ -79,7 +79,7 @@
 
         for (String s : this.rules.keySet())
         {
-            GameRules.Value gamerules$value = this.rules.get(s);
+            Value gamerules$value = this.rules.get(s);
             nbttagcompound.setString(s, gamerules$value.getString());
         }
 
@@ -105,10 +105,10 @@
         return this.rules.containsKey(name);
     }
 
-    public boolean areSameType(String key, GameRules.ValueType otherValue)
+    public boolean areSameType(String key, ValueType otherValue)
     {
-        GameRules.Value gamerules$value = this.rules.get(key);
-        return gamerules$value != null && (gamerules$value.getType() == otherValue || otherValue == GameRules.ValueType.ANY_VALUE);
+        Value gamerules$value = this.rules.get(key);
+        return gamerules$value != null && (gamerules$value.getType() == otherValue || otherValue == ValueType.ANY_VALUE);
     }
 
     static class Value
@@ -117,9 +117,9 @@
             private boolean valueBoolean;
             private int valueInteger;
             private double valueDouble;
-            private final GameRules.ValueType type;
+            private final ValueType type;
 
-            public Value(String value, GameRules.ValueType type)
+            public Value(String value, ValueType type)
             {
                 this.type = type;
                 this.setValue(value);
@@ -165,7 +165,7 @@
                 return this.valueInteger;
             }
 
-            public GameRules.ValueType getType()
+            public ValueType getType()
             {
                 return this.type;
             }
