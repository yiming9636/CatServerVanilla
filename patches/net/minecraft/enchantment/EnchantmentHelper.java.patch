--- ../src-base/minecraft/net/minecraft/enchantment/EnchantmentHelper.java
+++ ../src-work/minecraft/net/minecraft/enchantment/EnchantmentHelper.java
@@ -25,10 +25,10 @@
 
 public class EnchantmentHelper
 {
-    private static final EnchantmentHelper.ModifierDamage ENCHANTMENT_MODIFIER_DAMAGE = new EnchantmentHelper.ModifierDamage();
-    private static final EnchantmentHelper.ModifierLiving ENCHANTMENT_MODIFIER_LIVING = new EnchantmentHelper.ModifierLiving();
-    private static final EnchantmentHelper.HurtIterator ENCHANTMENT_ITERATOR_HURT = new EnchantmentHelper.HurtIterator();
-    private static final EnchantmentHelper.DamageIterator ENCHANTMENT_ITERATOR_DAMAGE = new EnchantmentHelper.DamageIterator();
+    private static final ModifierDamage ENCHANTMENT_MODIFIER_DAMAGE = new ModifierDamage();
+    private static final ModifierLiving ENCHANTMENT_MODIFIER_LIVING = new ModifierLiving();
+    private static final HurtIterator ENCHANTMENT_ITERATOR_HURT = new HurtIterator();
+    private static final DamageIterator ENCHANTMENT_ITERATOR_DAMAGE = new DamageIterator();
 
     public static int getEnchantmentLevel(Enchantment enchID, ItemStack stack)
     {
@@ -108,7 +108,7 @@
         }
     }
 
-    private static void applyEnchantmentModifier(EnchantmentHelper.IModifier modifier, ItemStack stack)
+    private static void applyEnchantmentModifier(IModifier modifier, ItemStack stack)
     {
         if (!stack.isEmpty())
         {
@@ -127,7 +127,7 @@
         }
     }
 
-    private static void applyEnchantmentModifierArray(EnchantmentHelper.IModifier modifier, Iterable<ItemStack> stacks)
+    private static void applyEnchantmentModifierArray(IModifier modifier, Iterable<ItemStack> stacks)
     {
         for (ItemStack itemstack : stacks)
         {
@@ -135,15 +135,16 @@
         }
     }
 
-    public static int getEnchantmentModifierDamage(Iterable<ItemStack> stacks, DamageSource source)
+    public synchronized static int getEnchantmentModifierDamage(Iterable<ItemStack> stacks, DamageSource source)
     {
         ENCHANTMENT_MODIFIER_DAMAGE.damageModifier = 0;
         ENCHANTMENT_MODIFIER_DAMAGE.source = source;
         applyEnchantmentModifierArray(ENCHANTMENT_MODIFIER_DAMAGE, stacks);
+        ENCHANTMENT_MODIFIER_DAMAGE.source = null; //Forge Fix memory leaks: https://bugs.mojang.com/browse/MC-128547
         return ENCHANTMENT_MODIFIER_DAMAGE.damageModifier;
     }
 
-    public static float getModifierForCreature(ItemStack stack, EnumCreatureAttribute creatureAttribute)
+    public synchronized static float getModifierForCreature(ItemStack stack, EnumCreatureAttribute creatureAttribute)
     {
         ENCHANTMENT_MODIFIER_LIVING.livingModifier = 0.0F;
         ENCHANTMENT_MODIFIER_LIVING.entityLiving = creatureAttribute;
@@ -157,7 +158,7 @@
         return i > 0 ? EnchantmentSweepingEdge.getSweepingDamageRatio(i) : 0.0F;
     }
 
-    public static void applyThornEnchantments(EntityLivingBase p_151384_0_, Entity p_151384_1_)
+    public synchronized static void applyThornEnchantments(EntityLivingBase p_151384_0_, Entity p_151384_1_)
     {
         ENCHANTMENT_ITERATOR_HURT.attacker = p_151384_1_;
         ENCHANTMENT_ITERATOR_HURT.user = p_151384_0_;
@@ -171,9 +172,12 @@
         {
             applyEnchantmentModifier(ENCHANTMENT_ITERATOR_HURT, p_151384_0_.getHeldItemMainhand());
         }
+
+        ENCHANTMENT_ITERATOR_HURT.attacker = null; //Forge Fix memory leaks: https://bugs.mojang.com/browse/MC-128547
+        ENCHANTMENT_ITERATOR_HURT.user = null;
     }
 
-    public static void applyArthropodEnchantments(EntityLivingBase p_151385_0_, Entity p_151385_1_)
+    public synchronized static void applyArthropodEnchantments(EntityLivingBase p_151385_0_, Entity p_151385_1_)
     {
         ENCHANTMENT_ITERATOR_DAMAGE.user = p_151385_0_;
         ENCHANTMENT_ITERATOR_DAMAGE.target = p_151385_1_;
@@ -187,6 +191,9 @@
         {
             applyEnchantmentModifier(ENCHANTMENT_ITERATOR_DAMAGE, p_151385_0_.getHeldItemMainhand());
         }
+
+        ENCHANTMENT_ITERATOR_DAMAGE.target = null; //Forge Fix memory leaks: https://bugs.mojang.com/browse/MC-128547
+        ENCHANTMENT_ITERATOR_DAMAGE.user = null;
     }
 
     public static int getMaxEnchantmentLevel(Enchantment p_185284_0_, EntityLivingBase p_185284_1_)
@@ -302,7 +309,7 @@
     public static int calcItemStackEnchantability(Random rand, int enchantNum, int power, ItemStack stack)
     {
         Item item = stack.getItem();
-        int i = item.getItemEnchantability();
+        int i = item.getItemEnchantability(stack);
 
         if (i <= 0)
         {
@@ -357,7 +364,7 @@
     {
         List<EnchantmentData> list = Lists.<EnchantmentData>newArrayList();
         Item item = itemStackIn.getItem();
-        int i = item.getItemEnchantability();
+        int i = item.getItemEnchantability(itemStackIn);
 
         if (i <= 0)
         {
@@ -413,7 +420,7 @@
 
         for (Enchantment enchantment : Enchantment.REGISTRY)
         {
-            if ((!enchantment.isTreasureEnchantment() || allowTreasure) && (enchantment.type.canEnchantItem(item) || flag))
+            if ((!enchantment.isTreasureEnchantment() || allowTreasure) && (enchantment.canApplyAtEnchantingTable(p_185291_1_) || (flag && enchantment.isAllowedOnBooks())))
             {
                 for (int i = enchantment.getMaxLevel(); i > enchantment.getMinLevel() - 1; --i)
                 {
@@ -429,7 +436,7 @@
         return list;
     }
 
-    static final class DamageIterator implements EnchantmentHelper.IModifier
+    static final class DamageIterator implements IModifier
         {
             public EntityLivingBase user;
             public Entity target;
@@ -444,7 +451,7 @@
             }
         }
 
-    static final class HurtIterator implements EnchantmentHelper.IModifier
+    static final class HurtIterator implements IModifier
         {
             public EntityLivingBase user;
             public Entity attacker;
@@ -464,7 +471,7 @@
         void calculateModifier(Enchantment enchantmentIn, int enchantmentLevel);
     }
 
-    static final class ModifierDamage implements EnchantmentHelper.IModifier
+    static final class ModifierDamage implements IModifier
         {
             public int damageModifier;
             public DamageSource source;
@@ -479,7 +486,7 @@
             }
         }
 
-    static final class ModifierLiving implements EnchantmentHelper.IModifier
+    static final class ModifierLiving implements IModifier
         {
             public float livingModifier;
             public EnumCreatureAttribute entityLiving;
